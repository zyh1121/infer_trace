#25818 
libavcodec/ffv1enc.c:922: error: Integer Overflow L5
  ([-oo, +oo] × 20):signed32 by call to `encode_rgb_frame`.

libavcodec/ffv1enc.c:878:5: Assignment
876.     FFV1Context *fs  = *(void **)arg;
877.     FFV1Context *f   = fs->avctx->priv_data;
878.     int width        = fs->slice_width;
         ^
879.     int height       = fs->slice_height;
880.     int x            = fs->slice_x;

libavcodec/ffv1enc.c:922:9: Call
920.                                      p->data[1] + ps * x + y * p->linesize[1],
921.                                      p->data[2] + ps * x + y * p->linesize[2] };
922.         encode_rgb_frame(fs, planes, width, height, p->linesize);
             ^
923.     }
924.     emms_c();

libavcodec/ffv1enc.c:296:1: Parameter `w`
  294. }
  295. 
  296. static void encode_rgb_frame(FFV1Context *s, const uint8_t *src[3],
       ^
  297.                              int w, int h, const int stride[3])
  298. {

libavcodec/ffv1enc.c:349:17: Call
  347.             sample[p][1][w]  = sample[p][1][w - 1];
  348.             if (lbd)
  349.                 encode_line(s, w, sample[p], (p + 1) / 2, 9);
                       ^
  350.             else
  351.                 encode_line(s, w, sample[p], (p + 1) / 2, bits + 1);

libavcodec/ffv1enc.c:170:1: <LHS trace>
168. }
169. 
170. static av_always_inline int encode_line(FFV1Context *s, int w,
     ^
171.                                         int16_t *sample[3],
172.                                         int plane_index, int bits)

libavcodec/ffv1enc.c:170:1: Parameter `w`
    168. }
    169. 
    170. static av_always_inline int encode_line(FFV1Context *s, int w,
         ^
    171.                                         int16_t *sample[3],
    172.                                         int plane_index, int bits)

libavcodec/ffv1enc.c:182:13: Binary operation: ([-oo, +oo] × 20):signed32 by call to `encode_rgb_frame` 
    180. 
    181.     if (s->ac) {
    182.         if (c->bytestream_end - c->bytestream < w * 20) {
                     ^
    183.             av_log(s->avctx, AV_LOG_ERROR, "encoded frame too large\n");
    184.             return AVERROR_INVALIDDATA;
