#27836
libavcodec/h264_slice.c:1486: error: Buffer Overrun L2
  Offset: [0, 2] Size: 2 by call to `implicit_weight_table`.

libavcodec/h264_slice.c:1232:9: Assignment
1230.     h->droppable       = h->nal_ref_idc == 0;
1231.     if (h->sps.frame_mbs_only_flag) {
1232.         h->picture_structure = PICT_FRAME;
              ^
1233.     } else {
1234.         field_pic_flag = get_bits1(&sl->gb);

libavcodec/h264_slice.c:1458:5: Call
1456.     }
1457. 
1458.     ff_init_poc(h, h->cur_pic_ptr->field_poc, &h->cur_pic_ptr->poc);
          ^
1459. 
1460.     if (h->pps.redundant_pic_cnt_present)

libavcodec/h264.c:1069:1: Parameter `h->picture_structure`
  1067. }
  1068. 
  1069. int ff_init_poc(H264Context *h, int pic_field_poc[2], int *pic_poc)
        ^
  1070. {
  1071.     const int max_frame_num = 1 << h->sps.log2_max_frame_num;

libavcodec/h264_slice.c:1463:11: Call
1461.         sl->redundant_pic_count = get_ue_golomb(&sl->gb);
1462. 
1463.     ret = ff_set_ref_count(h, sl);
                ^
1464.     if (ret < 0)
1465.         return ret;

libavcodec/h264.c:1174:1: Parameter `h->picture_structure`
  1172. }
  1173. 
  1174. int ff_set_ref_count(H264Context *h, H264SliceContext *sl)
        ^
  1175. {
  1176.     int ref_count[2], list_count;

libavcodec/h264_slice.c:1486:9: Call
1484.     else if (h->pps.weighted_bipred_idc == 2 &&
1485.              sl->slice_type_nos == AV_PICTURE_TYPE_B) {
1486.         implicit_weight_table(h, sl, -1);
              ^
1487.     } else {
1488.         sl->use_weight = 0;

libavcodec/h264_slice.c:714:1: <Offset trace>
712.  *                -1 initializes the rest
713.  */
714. static void implicit_weight_table(const H264Context *h, H264SliceContext *sl, int field)
     ^
715. {
716.     int ref0, ref1, i, cur_poc, ref_start, ref_count0, ref_count1;

libavcodec/h264_slice.c:714:1: Parameter `h->picture_structure`
  712.  *                -1 initializes the rest
  713.  */
  714. static void implicit_weight_table(const H264Context *h, H264SliceContext *sl, int field)
       ^
  715. {
  716.     int ref0, ref1, i, cur_poc, ref_start, ref_count0, ref_count1;

libavcodec/h264_slice.c:714:1: <Length trace>
712.  *                -1 initializes the rest
713.  */
714. static void implicit_weight_table(const H264Context *h, H264SliceContext *sl, int field)
     ^
715. {
716.     int ref0, ref1, i, cur_poc, ref_start, ref_count0, ref_count1;

libavcodec/h264_slice.c:714:1: Parameter `h->cur_pic_ptr->field_poc[*]`
  712.  *                -1 initializes the rest
  713.  */
  714. static void implicit_weight_table(const H264Context *h, H264SliceContext *sl, int field)
       ^
  715. {
  716.     int ref0, ref1, i, cur_poc, ref_start, ref_count0, ref_count1;

libavcodec/h264_slice.c:727:23: Array access: Offset: [0, 2] Size: 2 by call to `implicit_weight_table` 
  725.             cur_poc = h->cur_pic_ptr->poc;
  726.         } else {
  727.             cur_poc = h->cur_pic_ptr->field_poc[h->picture_structure - 1];
                             ^
  728.         }
  729.         if (sl->ref_count[0] == 1 && sl->ref_count[1] == 1 && !FRAME_MBAFF(h) &&
